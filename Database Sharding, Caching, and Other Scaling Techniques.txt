1. Database sharding:sharding is the process of splitting a large database into smaller independent databases to distribute the load.(Each shard handles a subset of the data,increase a scalability by distributing queries across multiple machines,reduce single point of failures)
Working of sharding:data is partitioned horizontally across multiple services,each shard has a portion of the dataset,A shard key determines which shard hold the data.
best use case:large scale application(eg:facebook)

2. Database caching:caching storage frequently accessed data in a fast ,in memory system to improve perfomance and reduce database load

Types of caching:
#application level caching:eg:storing result in memory variables.
#database query caching:eg:mysql query cache.
#distributed caching:eg:redis

best use cases:apis that fetchh same data repeatedily

3. Database Replication:Replication means copying data from one database to multiple databases for redundancy and load balancing.

Types of Replication:
Master-slave Replication:one primariy DB writes ,multiple replica read.
Master-Master Replication:multiple DBs support both ready and writes 

Best use cases:Read heavy application ,high availability systems,disaster recovery.

4.Database partitioning:partitioning splits large tables into smaller pieces to improve performance and manageability.partition can be stored on different servers,query can be optimize for specific partitions 

Types of partitioning:
Range partitioning:Data is split by ranges
List partitioning:Data is split by specific values.
Hash partitioning:Data is split by hash values.
composite partitioning:A combination of multiple methods.

best use caseS:time series databases,multi region databases
